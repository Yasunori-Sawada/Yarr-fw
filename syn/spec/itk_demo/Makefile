########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := yarr
PWD := $(shell pwd)
PROJECT := yarr_spec
PROJECT_FILE := $(PROJECT).xise
TOOL_PATH := /opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64
TCL_INTERPRETER := xtclsh
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := Spartan6
SYN_DEVICE := xc6slx45t
SYN_PACKAGE := fgg484
SYN_GRADE := -3

TCL_CREATE := project new $(PROJECT_FILE)
TCL_OPEN := project open $(PROJECT_FILE)
TCL_SAVE := project save
TCL_CLOSE := project close
ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

SOURCES_UCFFile := \
itk_demo.ucf

SOURCES_NGCFile := \
../../../ip-cores/spartan6/fifo_64x512.ngc \
../../../ip-cores/spartan6/rx_channel_fifo.ngc \
../../../ip-cores/spartan6/l2p_fifo.ngc \
../../../ip-cores/spartan6/ila_icon.ngc \
../../../ip-cores/spartan6/rx_bridge_fifo.ngc \
../../../ip-cores/spartan6/ila.ngc \
../../../ip-cores/spartan6/fifo_32x512.ngc \
../../../ip-cores/spartan6/rx_bridge_ctrl_fifo.ngc

SOURCES_VHDLFile := \
../../../ip-cores/spartan6/l2p_fifo.vhd \
../../../rtl/trigger-logic/edge_detector.vhd \
board_pkg.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/gn4124_core.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_top.vhd \
../../../rtl/common/generic_async_fifo_wrapper.vhd \
../../../rtl/common/rr_arbiter.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/memc3_wrapper.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/iodrp_controller.vhd \
../../../rtl/spartan6/gn4124-core/p2l_decode32.vhd \
../../../rtl/spartan6/ddr3-core/ddr3_ctrl.vhd \
../../../rtl/spartan6/ddr3-core/ddr3_ctrl_wrapper_pkg.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/pulse_sync_rtl.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/mcb_raw_wrapper.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/memc3_infrastructure.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_rtl.vhd \
../top_yarr_spec.vhd \
../../../ip-cores/spartan6/rx_bridge_ctrl_fifo.vhd \
../../../rtl/spartan6/gn4124-core/dma_controller.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_lut.vhd \
../../../rtl/tx-core/wb_tx_core.vhd \
../../../rtl/spartan6/rx-core/wb_rx_core.vhd \
../../../rtl/common/common_pkg.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/ddr3_ctrl_spec_bank3_32b_32b.vhd \
../../../rtl/spartan6/rx-core/cdr_serdes.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/l2p_ser.vhd \
../../../rtl/spartan6/rx-core/fei4_rx_channel.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/serdes_n_to_1_s2_diff.vhd \
../../../rtl/spartan6/gn4124-core/l2p_dma_master.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_bram.vhd \
../../../ip-cores/spartan6/rx_bridge_fifo.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/p2l_des.vhd \
../../../rtl/spartan6/ddr3-core/ddr3_ctrl_wrapper.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_disp.vhd \
../../../ip-cores/spartan6/clk_gen.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/mcb_soft_calibration.vhd \
../../../ip-cores/spartan6/fifo_32x512.vhd \
../../../rtl/spartan6/gn4124-core/p2l_dma_master.vhd \
../../../rtl/common/synchronizer.vhd \
../../../rtl/trigger-logic/eudet_tlu.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/serdes_n_to_1_s2_se.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_pkg.vhd \
../../../rtl/tx-core/serial_port.vhd \
../../../rtl/trigger-logic/wb_trigger_logic.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/iodrp_mcb_controller.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/gn4124_core_pkg.vhd \
../../../rtl/spartan6/ddr3-core/ddr3_ctrl_wb.vhd \
../../../rtl/spartan6/gn4124-core/dma_controller_wb_slave.vhd \
../../../rtl/common/wb_spi.vhd \
../../../rtl/tx-core/trigger_unit.vhd \
../../../rtl/trigger-logic/delayer.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/serdes_1_to_n_clk_pll_s2_diff.vhd \
../../../ip-cores/spartan6/rx_channel_fifo.vhd \
../../../rtl/spartan6/rx-core/wb_rx_bridge.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_lut_base.vhd \
../../../rtl/spartan6/gn4124-core/l2p_arbiter.vhd \
../../../rtl/spartan6/gn4124-core/wbmaster32.vhd \
../../../ip-cores/spartan6/fifo_64x512.vhd \
../../../rtl/spartan6/ddr3-core/ip_cores/ddr3_ctrl_spec_bank3_32b_32b/user_design/rtl/mcb_soft_calibration_top.vhd \
../../../rtl/spartan6/rx-core/decode_8b10b/decode_8b10b_wrapper.vhd \
../../../rtl/tx-core/tx_channel.vhd \
../../../rtl/common/wb_addr_decoder.vhd \
../../../rtl/spartan6/gn4124-core/spartan6/serdes_1_to_n_data_s2_se.vhd \
../../../rtl/spartan6/ddr3-core/ddr3_ctrl_pkg.vhd \
../../../rtl/spartan6/rx-core/data_alignment.vhd

files.tcl:
		@$(foreach sourcefile, $(SOURCES_UCFFile), echo "xfile add $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_NGCFile), echo "xfile add $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_VHDLFile), echo "xfile add $(sourcefile)" >> $@ &)

SYN_PRE_PROJECT_CMD := 
SYN_POST_PROJECT_CMD := 

SYN_PRE_SYNTHESIZE_CMD := 
SYN_POST_SYNTHESIZE_CMD := 

SYN_PRE_TRANSLATE_CMD := 
SYN_POST_TRANSLATE_CMD := 

SYN_PRE_MAP_CMD := 
SYN_POST_MAP_CMD := 

SYN_PRE_PAR_CMD := 
SYN_POST_PAR_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

project.tcl:
		echo $(TCL_CREATE) >> $@
		echo source files.tcl >> $@
		echo project set \"family\" \"$(SYN_FAMILY)\" >> $@
		echo project set \"device\" \"$(SYN_DEVICE)\" >> $@
		echo project set \"package\" \"$(SYN_PACKAGE)\" >> $@
		echo project set \"speed\" \"$(SYN_GRADE)\" >> $@
		echo project set \"Manual Implementation Compile Order\" \"false\" >> $@
		echo project set \"Auto Implementation Top\" \"false\" >> $@
		echo project set \"Create Binary Configuration File\" \"true\" >> $@
		echo set compile_directory . >> $@
		echo project set top $(TOP_MODULE) >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

project: files.tcl project.tcl
		$(SYN_PRE_PROJECT_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PROJECT_CMD)
		touch $@

synthesize.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Synthesize - XST} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

synthesize: project synthesize.tcl
		$(SYN_PRE_SYNTHESIZE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_SYNTHESIZE_CMD)
		touch $@

translate.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Translate} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

translate: synthesize translate.tcl
		$(SYN_PRE_TRANSLATE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_TRANSLATE_CMD)
		touch $@

map.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Map} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

map: translate map.tcl
		$(SYN_PRE_MAP_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_MAP_CMD)
		touch $@

par.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Place '&' Route} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

par: map par.tcl
		$(SYN_PRE_PAR_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PAR_CMD)
		touch $@

bitstream.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Generate Programming File} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

bitstream: par bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) xst xlnx_auto_0_xdb iseconfig _xmsgs _ngo *.b *_summary.html *.bld *.cmd_log *.drc *.lso *.ncd *.ngc *.ngd *.ngr *.pad *.par *.pcf *.prj *.ptwx *.stx *.syr *.twr *.twx *.gise *.gise *.bgn *.unroutes *.ut *.xpi *.xst *.xise *.xwbt *_envsettings.html *_guide.ncd *_map.map *_map.mrp *_map.ncd *_map.ngm *_map.xrpt *_ngdbuild.xrpt *_pad.csv *_pad.txt *_par.xrpt *_summary.xml *_usage.xml *_xst.xrpt usage_statistics_webtalk.html webtalk.log par_usage_statistics.html webtalk_pn.xml

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize translate map par bitstream
		rm -rf project.tcl synthesize.tcl translate.tcl map.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf *.bit *.bin *.mcs

.PHONY: mrproper clean all
